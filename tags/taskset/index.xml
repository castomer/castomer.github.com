<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>taskset on Concurrent Work</title><link>http://concurrent.work/tags/taskset/</link><description>Recent content in taskset on concurrent.work</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>©Copyright | Concurrent work</copyright><lastBuildDate>Sun, 23 Oct 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://concurrent.work/tags/taskset/index.xml" rel="self" type="application/rss+xml"/><item><title>容器内外统一的taskset命令</title><link>http://concurrent.work/2016/10/23/unified-process-cpu-taskset-cmd-used-within-and-outside-container/</link><pubDate>Sun, 23 Oct 2016 00:00:00 +0000</pubDate><guid>http://concurrent.work/2016/10/23/unified-process-cpu-taskset-cmd-used-within-and-outside-container/</guid><description>
监控业务agent部署时，为避免影响业务方计算资源，一般会对agent做cpu taskset限制。 现在遇到的问题是，agent的启动环境复杂，对于tasket来说物理机和虚拟机都很简单。然而容器就不同了， 许多种container解决方案下，容器内的进程看到的cpu都是其宿主 …</description></item></channel></rss>