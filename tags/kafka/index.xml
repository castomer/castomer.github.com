<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kafka on Concurrent Work</title><link>http://concurrent.work/tags/kafka/</link><description>Recent content in kafka on concurrent.work</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>©Copyright | Concurrent work</copyright><lastBuildDate>Sun, 25 Jan 2015 00:00:00 +0000</lastBuildDate><atom:link href="http://concurrent.work/tags/kafka/index.xml" rel="self" type="application/rss+xml"/><item><title>kafka producer源码分析</title><link>http://concurrent.work/2015/01/25/kafka-producer-api-source-code-reading/</link><pubDate>Sun, 25 Jan 2015 00:00:00 +0000</pubDate><guid>http://concurrent.work/2015/01/25/kafka-producer-api-source-code-reading/</guid><description>
周末闲来无事把前两天看的kafka producer源码工作流程整理了一下，便于后续工作和学习。 kafka producer源码分析</description></item><item><title>关闭kafka java api的log4j配置提升kafka producer性能</title><link>http://concurrent.work/2014/09/15/improve-kafka-producer-api-by-turn-log4j-off/</link><pubDate>Mon, 15 Sep 2014 00:00:00 +0000</pubDate><guid>http://concurrent.work/2014/09/15/improve-kafka-producer-api-by-turn-log4j-off/</guid><description>
背景 前段时间由于项目需要，基于官方提供的kafka 0.8.1.1版java api开发一个thrift接口的kafka代理层模块，我们暂且就称它为kafka-proxy吧， 主要功能是通过thrift接口接收外部系统的数据，根据规则转发给后端不同的kafka topic。
问 …</description></item><item><title>使用dashing写一个kafka监控dashboard</title><link>http://concurrent.work/2014/01/01/write-a-kafka-monitoring-dashboard-using-dashing-in-2-minutes/</link><pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate><guid>http://concurrent.work/2014/01/01/write-a-kafka-monitoring-dashboard-using-dashing-in-2-minutes/</guid><description>
problem kafka是一个以高吞吐著称的分布式消息队列组建，由linkedin于2010年12月开源，目前已经apache的正是项目, 2013年12月发布0.8稳定版， 官方一直没有提供比较好的状态监控解决方案，仅提供了一些JMX的MBean接口，本文将基于这些JMX的 …</description></item></channel></rss>