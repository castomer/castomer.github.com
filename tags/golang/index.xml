<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on Concurrent Work</title><link>http://concurrent.work/tags/golang/</link><description>Recent content in golang on concurrent.work</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>©Copyright | Concurrent work</copyright><lastBuildDate>Thu, 23 Mar 2017 00:00:00 +0000</lastBuildDate><atom:link href="http://concurrent.work/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>使用golang采集进程的fd导致cpu飘高问题</title><link>http://concurrent.work/2017/03/23/a-trap-about-collect-process-fd-usage-using-golang/</link><pubDate>Thu, 23 Mar 2017 00:00:00 +0000</pubDate><guid>http://concurrent.work/2017/03/23/a-trap-about-collect-process-fd-usage-using-golang/</guid><description>
监控业务agent使用golang实现的进程监控数据采集，部分线上ha和nginx部分机器10s周期的进程数据采集时agent cpu消耗周期性飘高。
第一个版本实现：
func CalculateFd(pid string) (netFdNum uint, fileFdNum …</description></item><item><title>使用文件锁防止进程被启多个</title><link>http://concurrent.work/2016/04/27/use-file-lock-to-limit-the-process-num/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>http://concurrent.work/2016/04/27/use-file-lock-to-limit-the-process-num/</guid><description>
基本原理：进程启动时尝试锁住自己的二进制，启动脚本通过flock命令检查二进制是否被锁。
package main // demo.go // qudongfang@gmail.com import ( "os" "syscall" "time" log …</description></item></channel></rss>